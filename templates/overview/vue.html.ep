% layout 'default', title => 'Vue Experiment';
%= asset 'vue.js'

<div id="app">
 <div class="row">
   <div class="col-md-12">
    <table class="table">
      <thead>
        <tr>
          <th>Incident</th>
          <th>Groups</th>
        </tr>
      </thead>
      <tbody>
        <tr is="blocked-incident"
         v-for="incident in incidents"
         v-bind:key="incident.incident.number"
         v-bind:incident="incident.incident"
         v-bind:incident_results="incident.incident_results"
         v-bind:update_results="incident.update_results"
            >
        </tr>
      </tbody>
    </table>
  </div>
 </div>
</div>

<script type="text/x-template" id="blocked-incident-upd-result-template">
<li v-bind:group-id="group_id"
    data-toggle="tooltip"
    data-placement="left"
    v-bind:title="title">
  <result-summary v-bind:result="result"></result-summary>
</li>
</script>

<script type="text/x-template" id="blocked-incident-template">
 <tr>
   <td>
     <incident-link v-bind:incident="incident"></incident-link>
    </td>
    <td>
      <div v-if="Object.keys(incident_results).length + Object.keys(update_results).length === 0">
         No data yet
      </div>
      <ul v-else class="summary-list">
        <li is="blocked-incident-inc-result"
            v-for="(result, group_id) in incident_results"
            v-bind:key="group_id"
            v-bind:group_id="group_id"
            v-bind:result="result"
           >
        </li>
        <li is="blocked-incident-upd-result"
           v-for="(result, group_id) in update_results"
           v-bind:key="group_id"
           v-bind:group_id="group_id"
           v-bind:result="result"
           >
        </li>
      </ul>
    </td>
  </tr>
</script>

%= javascript begin

Vue.component('blocked-incident-upd-result', {
  template: '#blocked-incident-upd-result-template',
  props: ['result', 'group_id'],
  computed: {
    title: function() {
      return "Aggregate: " + this.result.linkinfo.flavor + "-" + this.result.linkinfo.version;
    },
  }
})

Vue.component('blocked-incident', {
  template: '#blocked-incident-template',
  props: ['incident', 'incident_results', 'update_results']
})

var app = new Vue({
  el: '#app',
  created: function() {
    this.getBlocked();
    this.timer = setInterval(this.getBlocked, 10 * 60000);
  },
  data: {  
     incidents: []
  },
  methods: {
    getBlocked: function() {
      var self = this;
      axios.get('/blocked').then(
        function(response) {
          self.incidents = response.data;
        }
      );
    },
    cancelAutoUpdate () {
      clearInterval(this.timer);
    }
  },
  beforeDestroy () {
    this.cancelAutoUpdate();
  }
});
% end
